<style>
    .hero-image {
        background-image: url('@ViewBag.User.ImageUrl');
        height: 50%;
        width: 100%;
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
    }

    .hero-blur {
        backdrop-filter: blur(1rem);
        background-color: rgba(255, 255, 255, 0.8);
        height: 100%;
        width: 100%;
    }

    .hero-text {
        padding: 2rem;
        text-align: center;
        color: black;
    }
</style>
@{
    ViewBag.Title = "Benutzerkontenansicht";
}

<main>
    @{
        try
        {

            <div class="hero-image mb-4">
                <div class="hero-blur">
                    <div class="hero-text">
                        <div class="mb-2">
                            <img src="@ViewBag.User.ImageUrl" class="h-64 w-64 rounded-circle" />
                        </div>
                        <h1>@ViewBag.User.DisplayName</h1>
                        <p>@ViewBag.User.Email</p>
                        <p>@ViewBag.User.TotalFollowers Follower</p>
                        <a href="@ViewBag.User.SpotifyProfileUrl">Zum Spotify-Profil</a>
                    </div>
                </div>
            </div>

            <h3>Spotify-Abonnement-Stufe:</h3>
            if (@ViewBag.User.Product != null)
            {

                if (@ViewBag.User.Product == "premium")
                {
                    <p>Spotify Premium</p>
                }
                else
                {
                    <p>Spotify Free</p>
                }
            }
            else
            {
                <p style="color: red;">Preisstufe konnte nicht ermittelt werden.</p>
            }

            <div class="mt-4">
                <h3>Land: @ViewBag.User.Country</h3>
            </div>

            <div class="mt-4">
                <h3>Explizite Inhalte:</h3>
                @{
                    if (@ViewBag.User.ExplicitContentEnabled == null) {
                        <p style="color: red;">Es konnte nicht ermittelt werden, ob Explizite Inhalte angezeigt werden.</p>
                    } else if (@ViewBag.User.ExplicitContentEnabled == true) {
                        <p style="color: green">Explizite Inhalte werden angezeigt.</p>
                    } else {
                        <p style="color: red">Explizite Inhalte werden nicht angezeigt.</p>
                    }


                    if (@ViewBag.User.ExplicitContentAllowed == null) {
                        <p style="color: red;">Es konnte nicht ermittelt werden, ob Explizite Inhalte angezeigt dürfen.</p>
                    } else if (@ViewBag.User.ExplicitContentAllowed == true) {
                        <p style="color: green">Explizite Inhalte sind erlaubt.</p>
                    } else {
                        <p style="color: red">Explizite Inhalte sind nicht erlaubt.</p>
                    }
                }
            </div>

        }
        catch (Exception ex) {
            <div class="rounded shadow text-white py-2 px-3" style="background: red;">
                <b>Ein Fehler ist beim Laden der Seite aufgetreten</b>
                <div class="mt-2" style="background: red;">
                    <b>Frontend: </b>@ex.Message<br />
                </div>
                <div class="mt-2" style="background: red;">
                    <b>Backend: </b>@ViewBag.Error<br />
                </div>
            </div>
        }
    }
</main>